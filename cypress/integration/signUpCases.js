let uid=0
let uuid=0
context('Actions', () => {
    beforeEach(() => {
      uid = (new Date().getTime()).toString(36)
      uuid = uid  
      cy.viewport(1440, 1000) 
      cy.visit('http://tutorialsninja.com/demo/')
    })

    it('Register with valid data', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test'+uuid+'@email.com')
        .should('have.value', 'test'+uuid+'@email.com')
        cy.get('#input-telephone')
        .type('090078601')
        .should('have.value', '090078601')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('atestpassword')
        cy.get('[type="checkbox"]').click()
        cy.get('[value="Continue"]').click()
        cy.url().should('include', '/success')
        cy.get('#content').should('contain', 'Congratulations! Your new account has been successfully created!')
        cy.contains('My Account').click()
        cy.contains('Logout').click()
        cy.url().should('include', '/logout')
      })

    it('Register with already registered mail', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test1@email.com')
        .should('have.value', 'test1@email.com')
        cy.get('#input-telephone')
        .type('090078601')
        .should('have.value', '090078601')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('atestpassword')
        cy.get('[type="checkbox"]').click()
        cy.get('[value="Continue"]').click()
        cy.get('.alert').should('contain', ' Warning: E-Mail Address is already registered!')
      })

      it('Register with invalid email', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test')
        .should('have.value', 'test')
        cy.get('#input-telephone')
        .type('090078601')
        .should('have.value', '090078601')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('atestpassword')
        cy.get('[type="checkbox"]').click()
        cy.get('[value="Continue"]').click()
        cy.url().should('not.include', '/success')
        cy.get('#content').should('not.contain', 'Congratulations! Your new account has been successfully created!')
      })

      it('Register with invalid phone number', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test'+uuid+'@email.com')
        .should('have.value', 'test'+uuid+'@email.com')
        cy.get('#input-telephone')
        .type('qwerty')
        .should('have.value', 'qwerty')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('atestpassword')
        cy.get('[type="checkbox"]').click()
        cy.get('[value="Continue"]').click()
        cy.url().should('not.include', '/success')
        cy.get('#content').should('not.contain', 'Congratulations! Your new account has been successfully created!')
      })

      it('Register with invalid passwrod match', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test'+uuid+'@email.com')
        .should('have.value', 'test'+uuid+'@email.com')
        cy.get('#input-telephone')
        .type('090078601')
        .should('have.value', '090078601')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('awrongpassword')
        cy.get('[type="checkbox"]').click()
        cy.get('[value="Continue"]').click()
        cy.url().should('not.include', '/success')
        cy.get('#content').should('not.contain', 'Congratulations! Your new account has been successfully created!')
      })

      it('Register with terms and condition checkbox not selected', () => {
        cy.contains('My Account').click()
        cy.contains('Register').click()
        cy.url().should('include', '/register')
        cy.get('#input-firstname')
        .type('Test')
        .should('have.value', 'Test')
        cy.get('#input-lastname')
        .type('Name')
        .should('have.value', 'Name')
        cy.get('#input-email')
        .type('test'+uuid+'@email.com')
        .should('have.value', 'test'+uuid+'@email.com')
        cy.get('#input-telephone')
        .type('090078601')
        .should('have.value', '090078601')
        cy.get('#input-password')
        .type('atestpassword')
        cy.get('#input-confirm')
        .type('atestpassword')
        cy.get('[value="Continue"]').click()
        cy.url().should('not.include', '/success')
        cy.get('#content').should('not.contain', 'Congratulations! Your new account has been successfully created!')
      })

})    